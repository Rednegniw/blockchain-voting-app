import type { NextPage } from 'next';
import { useRouter } from 'next/dist/client/router';
import Head from 'next/head';
import { setCookie } from 'nookies';
import { useState } from 'react';
import BasicLayout from '../components/Layout/BasicLayout';
import Button from '../components/UI/Button';
import Input from '../components/UI/Input';
import { validateVoter } from '../services/request';

const Home: NextPage = () => {
  const [input, setInput] = useState('');
  const router = useRouter()

  const authenticate = async () => {
    if (input.length) {
      const res = await validateVoter(input)

      if (res.id) {
        setCookie(null, 'votingAppAuth', input, { path: '/' });
        router.push(`/election/${res.id}`)
      } else {
        alert('You submitted an invalid id.')
      }
    } else {
      alert('ID field is required')
    }
  };

  return (
    <>
      <Head>
        <title>Blockchain voting app</title>
        <meta content="Generated by create next app" name="description" />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <BasicLayout>
        <div className="flex flex-col items-center space-y-8">
          <h1 className="text-3xl font-bold">
            Welcome to the blockchain voting app!
          </h1>
          <p>Please put in your id you received to vote:</p>
          <Input
            hasErrors={false}
            onChange={e => setInput(e.target.value)}
            placeholder="For example: dsf35dsfe521."
            value={input}
          />
          <Button data-test="submit" onClick={authenticate}>Submit</Button>
        </div>
      </BasicLayout>
    </>
  );
};

export default Home;
